# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(studio_patcher)

if(CMKR_ROOT_PROJECT AND NOT CMKR_DISABLE_VCPKG)
	include(FetchContent)
	message(STATUS "Fetching vcpkg (2023.04.15)...")
	FetchContent_Declare(vcpkg URL "https://github.com/microsoft/vcpkg/archive/refs/tags/2023.04.15.tar.gz")
	FetchContent_GetProperties(vcpkg)
	if(NOT vcpkg_POPULATED)
		FetchContent_Populate(vcpkg)
		include("${vcpkg_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake")
	endif()
endif()

# Packages
find_package(polyhook2 REQUIRED
	COMPONENTS
		x64-windows-static
)

# Subdirectory: http
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/http")
else()
	set(CMAKE_FOLDER http)
endif()
add_subdirectory(http)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target: http_dll
set(http_dll_SOURCES
	"http/src/main.cpp"
	"http/src/scanner.cpp"
	"http/include/hooks.hpp"
	"http/include/patterns.hpp"
	"http/include/scanner.hpp"
	cmake.toml
)

add_library(http_dll SHARED)

target_sources(http_dll PRIVATE ${http_dll_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${http_dll_SOURCES})

target_compile_features(http_dll PUBLIC
	cxx_std_20
)

target_include_directories(http_dll PUBLIC
	"http/include"
)

target_link_libraries(http_dll PUBLIC
	PolyHook_2::x64-windows
)

