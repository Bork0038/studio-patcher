# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(chris_studio_dll_rewrite)

# Subdirectory: ../third_party
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/../third_party")
else()
	set(CMAKE_FOLDER "../third_party")
endif()
add_subdirectory("../third_party")
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target: http_dll
set(http_dll_SOURCES
	"http/src/main.cpp"
	cmake.toml
)

add_library(http_dll SHARED)

target_sources(http_dll PRIVATE ${http_dll_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${http_dll_SOURCES})

target_compile_features(http_dll PUBLIC
	cxx_std_20
)

target_include_directories(http_dll PUBLIC
	include
)

target_link_libraries(http_dll PUBLIC
	Polyhook2
)

